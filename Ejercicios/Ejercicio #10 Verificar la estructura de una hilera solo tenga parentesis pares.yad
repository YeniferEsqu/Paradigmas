//Tarea #2 Ejercicio 10
//Luis Felipe Castro Sánchez.
//Universidad Nacional

//Alfabeto
T = {(,),F,B,A,L,N,C,E,D,O,S,*}
//Alfabeto de entrada
I = {(,)}

//El algoritmo realiza lo siguiente:
//Se tienen los siguientes paréntesis (((())))
//Convierte los () en $ dejando al final ya sea (,) siendo desbalanceado y si al final queda () es balanceado

//Reglas
//Borrar Parentesis () para llegar a un () final que indica balance
(())->($)
//El * simboliza que no se encuentra balanceado por indiferencia de paréntesis
())->*)
(()->(*
//Finaliza cuando encuentra los paréntesis
()->. BALANCEADO

//Vamos moviendo el * hasta llegarlo al final
(*->*
*)->*

//Indica desbalance por tener el parentesis solo
)->*
(->*
// * simboliza el elemento erroneo
*->. DESBALANCEADO




//=========History========//
//a
//abcdacb
//adcbdc
//acsbcdaa
//acabcdaa
//acabcdab
//acabcdadd
//acabcdadc
//abcba
//dcbacbaddbac
//bcdadcbabcaadaa
//dacdaaaad
//bbdcabca
//caadbacd
//adcbd
//abccba
//adcb
//adcbdcab
//dcbdcad
//abcd
//ab
//b
//c
//cc
//aa
//aaaaa
//aaa
//aba
//aab
//aabb
//abcddccadaa
//aabbcddcaa
//ccddbbaacdcbaaccdbabcadbdcbcaa
//abb
//ccaa
//ccdd
//ddaaccbbddaaccaadddd
//1
//10
//110
//1010
//111
//10+11
//F10+11
//F11+11
//F110+110
//F1000+110111
//F1011010101+110111
//F110111+1011010101
//F10+1
//F1+10
//F11+10
//F10+101
//F10111110101+10111100001
//F10+10
//10+10
//101011+10
//10+101011
//1011010101+110111
//110111+1011010101
//10110+1110101
//1111+0000
//1111+1111
//10101010101+1110010101011
//11+11
//11+110
//110+11
//1+1
//1+0
//1010101
//1011
//10101
//110101
//110101*10101
//(((((((())))))))
//())))))
//()))))
//(()))
//((((()
//((())
//((())))
//((((())))))
//((((((((((()))))))))))
//((((((((((())))))))))))
//((((((((((()))))))))))))
//((((((((((((())))))))))))
//(()
//((()))
//()))))))))
//(()))))
//((((())
//(())
//())
//((((((()))))))))
//((((((()))))))))))
//((((((()))))))
//((((((())))))))))))))))))))))))))))
//(((((((((((((((((((())))))))))))))))))))
//((((((((((()))))
//(((((((()
